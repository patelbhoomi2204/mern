{"version":3,"sources":["components/PetRow.jsx","views/Main.jsx","components/Form.jsx","views/AddPet.jsx","views/OnePet.jsx","views/UpdatePet.jsx","App.js","reportWebVitals.js","index.js"],"names":["PetRow","props","pet","petName","petType","to","_id","Main","useState","setPet","useEffect","axios","get","then","res","data","allPet","className","sort","a","b","typeA","toUpperCase","typeB","map","m","i","Form","onSubmit","onSubmitHandler","htmlFor","type","name","onChange","onChangeHandler","value","form","error","message","petDescription","buttonName","skill1","skill2","skill3","AddPet","setForm","setError","e","target","preventDefault","post","errors","navigate","catch","console","log","OnePet","update","setUpdate","onePet","onClick","delete","err","UpdatePet","put","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c04ba0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nconst PetRow = props => {\r\n  return(\r\n    <tr>\r\n      <td>{props.pet.petName}</td>\r\n      <td>{props.pet.petType}</td>\r\n      <td><Link to={`/pet/${props.pet._id}`}>details</Link> | <Link to={`/pet/${props.pet._id}/edit`}>edit</Link></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default PetRow;","import React, { useEffect, useState } from 'react';\r\nimport {Link} from '@reach/router';\r\nimport PetRow from '../components/PetRow';\r\nimport axios from 'axios';\r\n\r\nconst Main = props => {\r\n  const [pet, setPet] = useState();\r\n\r\n  useEffect(()=> {\r\n    axios.get(\"http://localhost:8000/api/pet\")\r\n      .then(res => setPet(res.data.allPet))\r\n  }, [])\r\n  return(\r\n    <>\r\n        <h5><Link to=\"/pet/new\">add a pet to the shelter</Link></h5>\r\n        <h3>These pets are looking for a good home!</h3>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            pet ?\r\n            pet.sort((a,b) => {\r\n              const typeA = a.petType.toUpperCase(),\r\n                    typeB = b.petType.toUpperCase();\r\n              if (typeA < typeB) {\r\n                return -1;\r\n              }\r\n              if (typeA > typeB) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            }).map((m, i) => {\r\n              return <PetRow pet={m} key={i}></PetRow>\r\n            }) : \"\"\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;","import react from 'react';\r\n\r\nconst Form = props => {\r\n  return(\r\n    <>\r\n    <div className=\"formC\">\r\n      <form className=\"row\" onSubmit={props.onSubmitHandler}>\r\n          <div className=\"col-sm-6\">\r\n            <div>\r\n              <label htmlFor=\"petName\">Pet Name:</label>\r\n              <input type=\"text\" name=\"petName\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.petName}/>\r\n              {\r\n                props.error && props.error.petName ? <span className=\"text-danger\">{props.error.petName.message}</span> : \"\"\r\n              }\r\n              <br/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"petType\">Pet Type:</label>\r\n              <input type=\"text\" name=\"petType\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.petType}/>\r\n              {\r\n                props.error && props.error.petType ? <span className=\"text-danger\">{props.error.petType.message}</span> : \"\"\r\n              }\r\n              <br/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"petDescription\">Pet Description:</label>\r\n              <input type=\"text\" name=\"petDescription\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.petDescription}/>\r\n              {\r\n                props.error && props.error.petDescription ? <span className=\"text-danger\">{props.error.petDescription.message}</span> : \"\"\r\n              }\r\n              <br/>\r\n            </div>\r\n            <input type=\"submit\" value={props.buttonName} className=\"btn btn-primary\" />\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n          <div>\r\n            <p>Skills(Optional):</p>\r\n            <label htmlFor=\"skill1\">Skill 1</label>\r\n            <input type=\"text\" name=\"skill1\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.skill1}/>\r\n            <br/>\r\n            <label htmlFor=\"skill2\">Skill 2</label>\r\n            <input type=\"text\" name=\"skill2\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.skill2}/>\r\n            <br/>\r\n            <label htmlFor=\"skill3\">Skill 3</label>\r\n            <input type=\"text\" name=\"skill3\" className=\"form-control\" onChange={props.onChangeHandler} value={props.form.skill3}/>\r\n            <br/>\r\n          </div>\r\n          </div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;","import Form from '../components/Form';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\n\r\nconst AddPet = props => {\r\n  const [form, setForm] = useState({\r\n    petName:\"\",\r\n    petType:\"\",\r\n    petDescription:\"\",\r\n    skill1:\"\",\r\n    skill2:\"\",\r\n    skill3:\"\"\r\n  })\r\n\r\n  const [error, setError] = useState({})\r\n\r\n  const onChangeHandler = e => {\r\n    setForm({\r\n      ...form, [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:8000/api/pet/new\", form)\r\n      .then(res => {\r\n        if(res.data.error) {\r\n          setError(res.data.error.errors)\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch(console.log(\"Something went wrong trying to add to the database!\"))\r\n  }\r\n\r\n  return(\r\n    <>\r\n        <h5><Link to=\"/\">Back to home</Link></h5>\r\n        <h3>Know a pet nedding a home?</h3>\r\n      <Form form buttonName=\"Add Pet\" onChangeHandler={onChangeHandler} onSubmitHandler={onSubmitHandler} error={error}></Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPet;","import { Link, navigate} from '@reach/router';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst OnePet = props => {\r\n  const [pet, setPet] = useState();\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n      .then(res => setPet(res.data.onePet))\r\n  }, [update])\r\n  const removePet = _id => {\r\n      axios.delete(`http://localhost:8000/api/pet/delete/${_id}`)\r\n      .then(\r\n        setUpdate(!update),\r\n        navigate('/')\r\n      )\r\n      .catch(err => console.log(err))\r\n    }\r\n    return(\r\n      <div>\r\n      <h5><Link to=\"/\">Back to home</Link></h5>\r\n      {\r\n        pet ?\r\n        <>\r\n          <button onClick={() => removePet(props._id)} className=\"btn btn-danger\">Adopt {pet.petName}</button>\r\n          <h4>Details about: {pet.petName}</h4>\r\n          <div className=\"formC\">\r\n            <h6>Pet type: {pet.petType}</h6>\r\n            <h6>Pet description: {pet.petDescription}</h6>\r\n            <h6>Skills:</h6>\r\n            <div className=\"skills\">\r\n              <h6>{pet.skill1}</h6>\r\n              <h6>{pet.skill2}</h6>\r\n              <h6>{pet.skill3}</h6>\r\n            </div>\r\n          </div>\r\n        </> : \"\"\r\n      }\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\nexport default OnePet;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport Form from '../components/Form';\r\n\r\nconst UpdatePet = props => {\r\n\r\n  const [form, setForm] = useState({\r\n    petName:\"\",\r\n    petType:\"\",\r\n    petDescription:\"\",\r\n    skill1:\"\",\r\n    skill2:\"\",\r\n    skill3:\"\"\r\n  })\r\n\r\n  const [error, setError] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n      .then(res => setForm(res.data.onePet))\r\n  }, [])\r\n\r\n  const onChangeHandler = e => {\r\n    setForm({\r\n      ...form, [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    axios.put(`http://localhost:8000/api/pet/update/${props._id}`, form)\r\n      .then(res => {\r\n        if(res.data.error) {\r\n          setError(res.data.error.errors)\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch(console.log(\"Wrong while updating pet\"))\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <h5><Link to=\"/\">Back to home</Link></h5>\r\n      <h3>Edit {form.petName}</h3>\r\n      <Form buttonName=\"Edit Pet\" onSubmitHandler={onSubmitHandler} form={form} onChangeHandler= {onChangeHandler} error={error}></Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdatePet;","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Router } from '@reach/router';\nimport Main from './views/Main';\nimport AddPet from './views/AddPet';\nimport OnePet from './views/OnePet';\nimport UpdatePet from './views/UpdatePet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <Main path=\"/\"></Main>\n        <AddPet path = \"/pet/new\"></AddPet>\n        <OnePet path = \"/pet/:_id\"></OnePet>\n        <UpdatePet path = \"/pet/:_id/edit\"></UpdatePet>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}